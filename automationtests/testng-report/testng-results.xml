<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="39" passed="39">
  <reporter-output>
  </reporter-output>
  <suite name="Mosip API Suite" duration-ms="222581" started-at="2019-06-27T15:53:01Z" finished-at="2019-06-27T15:56:44Z">
    <groups>
    </groups>
    <test name="PreReg Tests" duration-ms="222581" started-at="2019-06-27T15:53:01Z" finished-at="2019-06-27T15:56:44Z">
      <class name="io.mosip.preregistration.tests.TriggerNotification">
        <test-method status="PASS" signature="suiteSetup()[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="suiteSetup" is-config="true" duration-ms="1450" started-at="2019-06-27T21:23:00Z" finished-at="2019-06-27T21:23:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetup -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="12533" started-at="2019-06-27T21:23:01Z" finished-at="2019-06-27T21:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@16949dfa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_additionalRecipient_false_smoke" duration-ms="7315" started-at="2019-06-27T21:23:14Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"smoke","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_additionalRecipient_false_smoke","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1000","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_additionalRecipient_false_smoke -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:23:21Z" finished-at="2019-06-27T21:23:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_additionalRecipient_false_smoke status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="111" started-at="2019-06-27T21:23:21Z" finished-at="2019-06-27T21:23:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@42cfd794]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_additionalRecipient_true_smoke" duration-ms="3777" started-at="2019-06-27T21:23:21Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"smoke","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_additionalRecipient_true_smoke","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1001","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_additionalRecipient_true_smoke -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="5" started-at="2019-06-27T21:23:25Z" finished-at="2019-06-27T21:23:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@43778371]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:23:25Z" finished-at="2019-06-27T21:23:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_additionalRecipient_true_smoke status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress" duration-ms="5406" started-at="2019-06-27T21:23:25Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"invalid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1010","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:23:30Z" finished-at="2019-06-27T21:23:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:23:30Z" finished-at="2019-06-27T21:23:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@71beada8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign" duration-ms="5485" started-at="2019-06-27T21:23:30Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"invalid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1011","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:23:36Z" finished-at="2019-06-27T21:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:23:36Z" finished-at="2019-06-27T21:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@17f41739]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty" duration-ms="4959" started-at="2019-06-27T21:23:36Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"invalid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1004","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:23:41Z" finished-at="2019-06-27T21:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="6" started-at="2019-06-27T21:23:41Z" finished-at="2019-06-27T21:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2b3b1124]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername" duration-ms="2916" started-at="2019-06-27T21:23:41Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"invalid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1009","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:23:44Z" finished-at="2019-06-27T21:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="6" started-at="2019-06-27T21:23:44Z" finished-at="2019-06-27T21:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@54286339]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate" duration-ms="2230" started-at="2019-06-27T21:23:44Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"invalid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1031","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:23:46Z" finished-at="2019-06-27T21:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="8" started-at="2019-06-27T21:23:46Z" finished-at="2019-06-27T21:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@507f47f9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_emailId_withInvalidValueAsGarbage" duration-ms="2980" started-at="2019-06-27T21:23:46Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"invalid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_emailId_withInvalidValueAsGarbage","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1007","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_emailId_withInvalidValueAsGarbage -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:23:49Z" finished-at="2019-06-27T21:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_emailId_withInvalidValueAsGarbage status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:23:49Z" finished-at="2019-06-27T21:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6785df10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_id_withInvalidOtherThanStandardValue" duration-ms="4999" started-at="2019-06-27T21:23:49Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"invalid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_id_withInvalidOtherThanStandardValue","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1012","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_id_withInvalidOtherThanStandardValue -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:23:54Z" finished-at="2019-06-27T21:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_id_withInvalidOtherThanStandardValue status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:23:54Z" finished-at="2019-06-27T21:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@144440f5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidDateFormat" duration-ms="4997" started-at="2019-06-27T21:23:54Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"invalid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidDateFormat","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1024","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidDateFormat -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:23:59Z" finished-at="2019-06-27T21:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidDateFormat status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:23:59Z" finished-at="2019-06-27T21:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3e2c8ef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces" duration-ms="4921" started-at="2019-06-27T21:23:59Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"invalid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1035","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:04Z" finished-at="2019-06-27T21:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="11" started-at="2019-06-27T21:24:04Z" finished-at="2019-06-27T21:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@290807e5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_emailId_withInvalidValueAsMissing@" duration-ms="3109" started-at="2019-06-27T21:24:04Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"invalid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_emailId_withInvalidValueAsMissing@","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1008","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_emailId_withInvalidValueAsMissing@ -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:24:07Z" finished-at="2019-06-27T21:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@60bc308b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:24:07Z" finished-at="2019-06-27T21:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_emailId_withInvalidValueAsMissing@ status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters" duration-ms="5551" started-at="2019-06-27T21:24:07Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"invalid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1036","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:13Z" finished-at="2019-06-27T21:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:24:13Z" finished-at="2019-06-27T21:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@56499781]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty" duration-ms="4820" started-at="2019-06-27T21:24:13Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"invalid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1002","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:24:17Z" finished-at="2019-06-27T21:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="6" started-at="2019-06-27T21:24:17Z" finished-at="2019-06-27T21:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@43f99817]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29" duration-ms="2341" started-at="2019-06-27T21:24:17Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"invalid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1033","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29 -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:24:20Z" finished-at="2019-06-27T21:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29 status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="9" started-at="2019-06-27T21:24:20Z" finished-at="2019-06-27T21:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a2798a2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid" duration-ms="5107" started-at="2019-06-27T21:24:20Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"invalid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1006","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:25Z" finished-at="2019-06-27T21:24:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="7" started-at="2019-06-27T21:24:25Z" finished-at="2019-06-27T21:24:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2b9ecd05]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_name_withInvalidValueAsEmpty" duration-ms="4817" started-at="2019-06-27T21:24:25Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"invalid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_name_withInvalidValueAsEmpty","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1020","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_name_withInvalidValueAsEmpty -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:24:30Z" finished-at="2019-06-27T21:24:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_name_withInvalidValueAsEmpty status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="5" started-at="2019-06-27T21:24:30Z" finished-at="2019-06-27T21:24:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@31f1b268]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_version_withInvalidEmptyValue" duration-ms="4745" started-at="2019-06-27T21:24:30Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"invalid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_version_withInvalidEmptyValue","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1039","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_version_withInvalidEmptyValue -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="2" started-at="2019-06-27T21:24:34Z" finished-at="2019-06-27T21:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_version_withInvalidEmptyValue status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="11" started-at="2019-06-27T21:24:34Z" finished-at="2019-06-27T21:24:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3ec7ad61]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_langcode_withInvalidValueAsEmpty" duration-ms="2178" started-at="2019-06-27T21:24:34Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"invalid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_langcode_withInvalidValueAsEmpty","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1014","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_langcode_withInvalidValueAsEmpty -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:37Z" finished-at="2019-06-27T21:24:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_langcode_withInvalidValueAsEmpty status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:24:37Z" finished-at="2019-06-27T21:24:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2833c093]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_version_withInvalidOtherThanStandardValue" duration-ms="4512" started-at="2019-06-27T21:24:37Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"invalid","testCaseName":"preReg_TriggerNotification_version_withInvalidOtherThanStandardValue","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1040","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_version_withInvalidOtherThanStandardValue -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:41Z" finished-at="2019-06-27T21:24:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_version_withInvalidOtherThanStandardValue status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:24:41Z" finished-at="2019-06-27T21:24:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7598d675]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_id_withInvalidValueAsEmpty" duration-ms="2129" started-at="2019-06-27T21:24:41Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_id_withInvalidValueAsEmpty","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"invalid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1013","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_id_withInvalidValueAsEmpty -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:43Z" finished-at="2019-06-27T21:24:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_id_withInvalidValueAsEmpty status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="6" started-at="2019-06-27T21:24:43Z" finished-at="2019-06-27T21:24:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4946485c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_name_withInvalidValueAsNonExisting" duration-ms="4256" started-at="2019-06-27T21:24:43Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_name_withInvalidValueAsNonExisting","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"invalid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1021","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_name_withInvalidValueAsNonExisting -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:48Z" finished-at="2019-06-27T21:24:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_name_withInvalidValueAsNonExisting status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:24:48Z" finished-at="2019-06-27T21:24:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4ae958b0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax" duration-ms="5039" started-at="2019-06-27T21:24:48Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"invalid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1018","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:53Z" finished-at="2019-06-27T21:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:24:53Z" finished-at="2019-06-27T21:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7c682e26]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidTime" duration-ms="4693" started-at="2019-06-27T21:24:53Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:24:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidTime","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"invalid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1028","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidTime -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:24:57Z" finished-at="2019-06-27T21:24:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidTime status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:24:57Z" finished-at="2019-06-27T21:24:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4ff074a0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidDay" duration-ms="2733" started-at="2019-06-27T21:24:57Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:25:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidDay","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"invalid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1026","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidDay -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:25:00Z" finished-at="2019-06-27T21:25:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidDay status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:25:00Z" finished-at="2019-06-27T21:25:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@340fc1aa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax" duration-ms="7395" started-at="2019-06-27T21:25:00Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"invalid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1019","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:25:07Z" finished-at="2019-06-27T21:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="4" started-at="2019-06-27T21:25:07Z" finished-at="2019-06-27T21:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@34a33343]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate" duration-ms="4576" started-at="2019-06-27T21:25:07Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:25:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"invalid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1030","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:25:12Z" finished-at="2019-06-27T21:25:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="9" started-at="2019-06-27T21:25:12Z" finished-at="2019-06-27T21:25:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@98722ef]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting" duration-ms="2191" started-at="2019-06-27T21:25:12Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:25:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"invalid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1015","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:25:14Z" finished-at="2019-06-27T21:25:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:25:14Z" finished-at="2019-06-27T21:25:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@459e120b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting" duration-ms="4964" started-at="2019-06-27T21:25:14Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"invalid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1003","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:25:19Z" finished-at="2019-06-27T21:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:25:19Z" finished-at="2019-06-27T21:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@fd69983]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields" duration-ms="2173" started-at="2019-06-27T21:25:19Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:25:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"invalid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1037","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:25:21Z" finished-at="2019-06-27T21:25:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="7" started-at="2019-06-27T21:25:21Z" finished-at="2019-06-27T21:25:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@22429a11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty" duration-ms="50045" started-at="2019-06-27T21:25:21Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"invalid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1022","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:26:11Z" finished-at="2019-06-27T21:26:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@126254ec]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:11Z" finished-at="2019-06-27T21:26:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting" duration-ms="4975" started-at="2019-06-27T21:26:11Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"invalid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1023","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:26:16Z" finished-at="2019-06-27T21:26:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="5" started-at="2019-06-27T21:26:16Z" finished-at="2019-06-27T21:26:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@275902e1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen" duration-ms="4982" started-at="2019-06-27T21:26:16Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"invalid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1025","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:21Z" finished-at="2019-06-27T21:26:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:26:21Z" finished-at="2019-06-27T21:26:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1c788d08]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets" duration-ms="3028" started-at="2019-06-27T21:26:21Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"invalid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1029","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:26:24Z" finished-at="2019-06-27T21:26:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:26:24Z" finished-at="2019-06-27T21:26:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2adc1e84]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidMonth" duration-ms="4793" started-at="2019-06-27T21:26:24Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidMonth","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"invalid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1027","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidMonth -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="1" started-at="2019-06-27T21:26:29Z" finished-at="2019-06-27T21:26:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidMonth status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="2" started-at="2019-06-27T21:26:29Z" finished-at="2019-06-27T21:26:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a99fa07]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue" duration-ms="2248" started-at="2019-06-27T21:26:29Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"invalid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1032","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="1" started-at="2019-06-27T21:26:31Z" finished-at="2019-06-27T21:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@45b8bbbf]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:31Z" finished-at="2019-06-27T21:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidYear" duration-ms="4974" started-at="2019-06-27T21:26:31Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidYear","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"invalid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1038","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidYear -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:36Z" finished-at="2019-06-27T21:26:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidYear status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="3" started-at="2019-06-27T21:26:36Z" finished-at="2019-06-27T21:26:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1df06ecd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets" duration-ms="4966" started-at="2019-06-27T21:26:36Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[37]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"invalid","jiraId":"MOS-1017","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"valid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:41Z" finished-at="2019-06-27T21:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="getTestCaseName(java.lang.reflect.Method, [Ljava.lang.Object;, org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="getTestCaseName" is-config="true" duration-ms="3" started-at="2019-06-27T21:26:41Z" finished-at="2019-06-27T21:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void io.mosip.preregistration.tests.TriggerNotification.triggerNotification(java.lang.String,java.lang.Integer,org.json.simple.JSONObject) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@57927bc9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestCaseName -->
        <test-method status="PASS" signature="triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" duration-ms="2348" started-at="2019-06-27T21:26:41Z" data-provider="TriggerNotification" finished-at="2019-06-27T21:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preReg/TriggerNotification]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{"preReg_TriggerNotification_emailId_withInvalidValueAsPlainAddress":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsTwo@sign":"valid","preReg_TriggerNotification_appointmentTime_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissingUsername":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsDateLessThanCurrentDate":"valid","testType":"regression","preReg_TriggerNotification_emailId_withInvalidValueAsGarbage":"valid","preReg_TriggerNotification_id_withInvalidOtherThanStandardValue":"valid","preReg_TriggerNotification_requesttime_withInvalidDateFormat":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpaces":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsMissing@":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsSpecialCharacters":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebGreaterThan29":"valid","preReg_TriggerNotification_emailId_withInvalidValueAsEncodedHtmlWithinEmailIsInvalid":"valid","preReg_TriggerNotification_name_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidEmptyValue":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_version_withInvalidOtherThanStandardValue":"valid","testCaseName":"preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29","preReg_TriggerNotification_id_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_name_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_mobNum_withInvalidValueGreaterThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidTime":"valid","preReg_TriggerNotification_requesttime_withInvalidDay":"valid","preReg_TriggerNotification_mobNum_withInvalidValueLessThanMax":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsDateGreaterThanCurrentDate":"valid","preReg_TriggerNotification_langcode_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_appointmentDate_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsZeroInAllFields":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsEmpty":"valid","preReg_TriggerNotification_preRegistrationId_withInvalidValueAsNonExisting":"valid","preReg_TriggerNotification_requesttime_withInvalidDateOfSlashInsteadOfHypen":"valid","preReg_TriggerNotification_requesttime_withInvalidValueAsAlphabets":"valid","preReg_TriggerNotification_requesttime_withInvalidMonth":"valid","preReg_TriggerNotification_requesttime_withInvalidvalueAsEmptyValue":"valid","preReg_TriggerNotification_requesttime_withInvalidYear":"valid","preReg_TriggerNotification_mobNum_withInvalidValueAsAlphabets":"valid","jiraId":"MOS-1034","preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29":"invalid","status":"Pass"}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29 -->
        <test-method status="PASS" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="setResultTestName" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:44Z" finished-at="2019-06-27T21:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29 status=SUCCESS method=TriggerNotification.triggerNotification(java.lang.String, java.lang.Integer, org.json.simple.JSONObject)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="PASS" signature="statusUpdate()[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="statusUpdate" is-config="true" duration-ms="6" started-at="2019-06-27T21:26:44Z" finished-at="2019-06-27T21:26:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusUpdate -->
        <test-method status="PASS" signature="testTearDown(org.testng.ITestContext)[pri:0, instance:io.mosip.preregistration.tests.TriggerNotification@49e53c76]" test-instance-name="preReg_TriggerNotification_requesttime_withInvalidvalueAsFebNonLeapYearWith29" name="testTearDown" is-config="true" duration-ms="0" started-at="2019-06-27T21:26:44Z" finished-at="2019-06-27T21:26:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@d6d683e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- io.mosip.preregistration.tests.TriggerNotification -->
    </test> <!-- PreReg Tests -->
  </suite> <!-- Mosip API Suite -->
</testng-results>
