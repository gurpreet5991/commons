//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.12.06 at 02:49:01 PM IST 
//


package io.mosip.util;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SingleAnySubtypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="SingleAnySubtypeType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Left"/&gt;
 *     &lt;enumeration value="Right"/&gt;
 *     &lt;enumeration value="Thumb"/&gt;
 *     &lt;enumeration value="IndexFinger"/&gt;
 *     &lt;enumeration value="MiddleFinger"/&gt;
 *     &lt;enumeration value="RingFinger"/&gt;
 *     &lt;enumeration value="LittleFinger"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SingleAnySubtypeType")
@XmlEnum
public enum SingleAnySubtypeType {

    @XmlEnumValue("Left")
    LEFT("Left"),
    @XmlEnumValue("Right")
    RIGHT("Right"),
    @XmlEnumValue("Thumb")
    THUMB("Thumb"),
    @XmlEnumValue("IndexFinger")
    INDEX_FINGER("IndexFinger"),
    @XmlEnumValue("MiddleFinger")
    MIDDLE_FINGER("MiddleFinger"),
    @XmlEnumValue("RingFinger")
    RING_FINGER("RingFinger"),
    @XmlEnumValue("LittleFinger")
    LITTLE_FINGER("LittleFinger");
    private final String value;

    SingleAnySubtypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SingleAnySubtypeType fromValue(String v) {
        for (SingleAnySubtypeType c: SingleAnySubtypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
